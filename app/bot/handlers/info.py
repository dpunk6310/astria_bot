import asyncio
from pathlib import Path

from aiogram import types, Router, F
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder

from data.messages import use_messages
from core.backend.api import (
    create_user_db, 
    get_user,
)
from core.logger.logger import get_logger
from .utils import (
    create_referal,
    get_main_keyboard,
)


info_router = Router()
BASE_DIR = Path(__file__).resolve().parent.parent
log = get_logger()


@info_router.message(CommandStart())
@use_messages
async def start_handler(message: types.Message, messages):
    user_db = await get_user(str(message.chat.id))
    if not user_db:
        user_db = await create_user_db(
            tg_user_id=message.from_user.id,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name,
            username=message.from_user.username
        )
                
    builder = InlineKeyboardBuilder()
    
    builder.add(
        types.InlineKeyboardButton(
            text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
            callback_data="inst"
        ),
        types.InlineKeyboardButton(
            text="–û–ø–ª–∞—Ç–∏—Ç—å",
            callback_data="first_payment"
        ),
    )
    
    keyboard = builder.as_markup()
    if user_db.get("has_purchased", True):
        keyboard = get_main_keyboard()
    
    asyncio.create_task(create_referal(user_db, message))
    
    await message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "logo_p.png"),
        caption="""<b>–ü—Ä–∏–≤–µ—Ç! –ù–∞ —Å–≤—è–∑–∏ –ü–∏–Ω–≥–≤–∏–Ω –±–æ—Ç - —É—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø–æ–ø—É–ª—è—Ä–Ω–æ–π –Ω–µ–π—Ä–æ–Ω–∫–∏</b> üêß

–†–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –∫–∞–∫ –∑–¥–µ—Å—å –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç? –ê –µ—Å–ª–∏ —Ç—ã —É–∂–µ –≤ –∫—É—Ä—Å–µ, –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤–Ω–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É - –∏ –≤–ø–µ—Ä–µ–¥!
""",
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    

@info_router.callback_query(F.data == "inst")
async def inst_callback(call: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(
        types.InlineKeyboardButton(
            text="–í—Å–µ –ø–æ–Ω—è—Ç–Ω–æ!",
            callback_data="inst_next2"
        ),
    )
    await call.message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "90.png"),
        caption="""<b>–ü–∏–Ω–≥–≤–∏–Ω –ò–ò</b> - —ç—Ç–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—å, –∫–æ—Ç–æ—Ä–∞—è —É—á–∏—Ç—Å—è –Ω–∞ —Ç–≤–æ–∏—Ö —Ñ–æ—Ç–æ –∏ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–µ <b>—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –≤–∏–¥–µ–æ</b> —Å —Ç–≤–æ–∏–º–∏ —á–µ—Ä—Ç–∞–º–∏ –ª–∏—Ü–∞ 

<b>–ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</b> üòç""",
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    
    
@info_router.callback_query(F.data == "inst_next2")
async def inst_next2_callback(call: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(
        types.InlineKeyboardButton(
            text="–î–∞–ª—å—à–µ!",
            callback_data="inst_next3"
        ),
    )
    await call.message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "2.png"),
        caption="–ü–æ–¥–æ–π–¥—É—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ª—é–±–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞, –Ω–æ —Å—Ç—É–¥–∏–π–Ω—ã–µ –º–æ–≥—É—Ç –¥–∞—Ç—å –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!",
        reply_markup=builder.as_markup()
    )
    

@info_router.callback_query(F.data == "inst_next3")
async def inst_next3_callback(call: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(
        types.InlineKeyboardButton(
            text="–ê —Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?",
            callback_data="inst_next4"
        ),
    )
    await call.message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "87.jpg"),
        caption="""<b>–î–ª—è —Ç–µ–±—è –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–≤–∞ —Ä–µ–∂–∏–º–∞ –Ω–∞ –≤—ã–±–æ—Ä:</b>

1. –†–µ–∂–∏–º ¬´–°—Ç–∏–ª–∏¬ª, –≥–¥–µ —Ç—ã –≤—ã–±–∏—Ä–∞–µ—à—å –∫–µ–º –±—ã—Ç—å: –æ—Ç —Ä–µ–±–µ–Ω–∫–∞ –¥–æ –∫–∏–Ω–æ–∑–≤–µ–∑–¥—ã! 
2. ¬´–†–µ–∂–∏–º –±–æ–≥–∞¬ª, –≥–¥–µ —Ç—ã —Å–∞–º —Ä–µ—à–∞–µ—à—å –∫–µ–º –±—ã—Ç—å! –¢–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—Å–∞—Ç—å —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤–∞—Ö)

–ó–∞—Ç–µ–º –æ–∂–∏–≤–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ <b>—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –∏—Ö –≤ –≤–∏–¥–µ–æ</b> –ø–æ —Å–≤–æ–µ–º—É –∂–µ–ª–∞–Ω–∏—é! ü§©""",
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    
    
@info_router.callback_query(F.data == "inst_next4")
async def inst_next4_callback(call: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(
        types.InlineKeyboardButton(
            text="–ö—É–ø–∏—Ç—å!",
            callback_data="first_payment"
        ),
    )
    await call.message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "89.png"),
        caption="""<b>–¢—ã –≥–æ—Ç–æ–≤(–∞) —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–∏ –Ω–æ–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏? –¢–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –≤–Ω–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É –∏ –Ω–∞—á–Ω—ë–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —à–µ–¥–µ–≤—Ä–æ–≤!</b>

–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç–µ–±–µ –ø–æ–≤–µ–∑–ª–æ, —Å–µ–π—á–∞—Å –º—ã —Å–Ω–∏–∑–∏–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞ 72%: 1 290‚ÇΩ –≤–º–µ—Å—Ç–æ <s>4 490‚ÇΩ</s>

–û–ø–ª–∞—Ç–∏ —Å–µ–π—á–∞—Å –∫–∞—Ä—Ç–æ–π –†–§, –ª–∏–±–æ –∑–∞—Ä—É–±–µ–∂–Ω–æ–π –∫–∞—Ä—Ç–æ–π –∏ –ø–æ–ª—É—á–∏:
‚úîÔ∏è 90 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π 
‚úîÔ∏è –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–±–ª–æ–Ω–æ–≤
‚úîÔ∏è 1 –º–æ–¥–µ–ª—å
‚úîÔ∏è –†–µ–∂–∏–º –±–æ–≥–∞
‚úîÔ∏è <b>–û–∂–∏–≤–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ!</b>

–ï–∂–µ–º–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–∏—Å –ü–∏–Ω–≥–≤–∏–Ω –ò–ò*

üëâ –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏: https://photopingvin.space/politics

üëâ –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞: https://photopingvin.space/services

üëâ –°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥: https://photopingvin.space/
""",
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    
    
@info_router.callback_query(F.data == "home")
async def home_callback(call: types.CallbackQuery):
    user_db = await get_user(str(call.message.chat.id))
    if not user_db:
        user_db = await create_user_db(
            tg_user_id=call.message.from_user.id,
            first_name=call.message.from_user.first_name,
            last_name=call.message.from_user.last_name,
            username=call.message.from_user.username
        )
        
        
    builder = InlineKeyboardBuilder()
    
    builder.add(
        types.InlineKeyboardButton(
            text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
            callback_data="inst"
        ),
        types.InlineKeyboardButton(
            text="–û–ø–ª–∞—Ç–∏—Ç—å",
            callback_data="first_payment"
        ),
    )
    
    keyboard = builder.as_markup()
    if user_db.get("count_generations") > 0:
        keyboard = get_main_keyboard()
    
    await call.message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "logo_p.png"),
        caption="""<b>–ü—Ä–∏–≤–µ—Ç! –ù–∞ —Å–≤—è–∑–∏ –ü–∏–Ω–≥–≤–∏–Ω –±–æ—Ç - —É—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø–æ–ø—É–ª—è—Ä–Ω–æ–π –Ω–µ–π—Ä–æ–Ω–∫–∏</b> üêß

–†–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –∫–∞–∫ –∑–¥–µ—Å—å –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç? –ê –µ—Å–ª–∏ —Ç—ã —É–∂–µ –≤ –∫—É—Ä—Å–µ, –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤–Ω–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É - –∏ –≤–ø–µ—Ä–µ–¥!
""",
        reply_markup=keyboard,
        parse_mode="HTML"
    )


@info_router.callback_query(F.data == "driving")
async def driving_callback(call: types.CallbackQuery):
    await call.message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "87.jpg"),
        caption="""<b>–î–ª—è —Ç–µ–±—è –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–≤–∞ —Ä–µ–∂–∏–º–∞ –Ω–∞ –≤—ã–±–æ—Ä:</b>

1. –†–µ–∂–∏–º ¬´–°—Ç–∏–ª–∏¬ª, –≥–¥–µ —Ç—ã –≤—ã–±–∏—Ä–∞–µ—à—å –∫–µ–º –±—ã—Ç—å: –æ—Ç —Ä–µ–±–µ–Ω–∫–∞ –¥–æ –∫–∏–Ω–æ–∑–≤–µ–∑–¥—ã! 
2. ¬´–†–µ–∂–∏–º –±–æ–≥–∞¬ª, –≥–¥–µ —Ç—ã —Å–∞–º —Ä–µ—à–∞–µ—à—å –∫–µ–º –±—ã—Ç—å! –¢–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—Å–∞—Ç—å —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤–∞—Ö)

–ó–∞—Ç–µ–º –æ–∂–∏–≤–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ <b>—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –∏—Ö –≤ –≤–∏–¥–µ–æ –ø–æ —Å–≤–æ–µ–º—É –∂–µ–ª–∞–Ω–∏—é!</b> ü§©""",
        reply_markup=get_main_keyboard(),
        parse_mode="HTML"
    )
    

@info_router.message(F.text == "FAQ")
async def faq_handler(message: types.Message):
    await message.answer(
        text="""<b>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:</b>

<b>–û—Å—Ç–∞—é—Ç—Å—è –ª–∏ –º–æ–∏ —Ñ–æ—Ç–æ –∏ –∞–≤–∞—Ç–∞—Ä –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏?</b>
–ê–±—Å–æ–ª—é—Ç–Ω–æ! –í–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –Ω–∞ –∏—Ö –æ—Å–Ω–æ–≤–µ –º–æ–¥–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤–∞–º–∏ –∏ —Ö—Ä–∞–Ω—è—Ç—Å—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–µ–ø–µ–Ω—å—é –∑–∞—â–∏—Ç—ã.

<b>–ö–∞–∫ –±—ã—Å—Ç—Ä–æ —Å–æ–∑–¥–∞—é—Ç—Å—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?</b>
–ü–æ–ª—É—á–∞–π—Ç–µ 3 –≥–æ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ–≥–æ –∑–∞ 40-50 —Å–µ–∫—É–Ω–¥!

<b>–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã?</b>
–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞—Ä—Ç—ã –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω –º–∏—Ä–∞ —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ, –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã, –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–∫–æ–Ω–∞–º.

<b>–ï—Å—Ç—å –ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥?</b>
–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç.  –í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞—à–µ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —Ç—Ä–µ–±—É–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –º–æ—â–Ω–æ—Å—Ç–µ–π, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã–º.

<b>–ù–∞—Å–∫–æ–ª—å–∫–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã –ø–æ–ª—É—á–∞–µ–º—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è?</b>
–°–æ–∑–¥–∞–Ω–Ω—ã–µ –ò–ò —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã.  –ú–Ω–æ–≥–∏–µ –∫–ª–∏–µ–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∏—Ö –¥–∞–∂–µ –≤ —Å–≤–æ–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—é–º–µ!

<b>–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã?</b>
–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É, –≥–¥–µ —Å–º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ñ–æ—Ç–æ, —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–æ–π.

<b>–°–∫–æ–ª—å–∫–æ —Å—Ç–∏–ª–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ?</b>
–°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω–æ –±–æ–ª–µ–µ 100 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π! –í—ã —Å–º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–µ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞.

<b>–ï—Å—Ç—å –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞?</b>
–ö–æ–Ω–µ—á–Ω–æ! –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ: 30 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –æ–ø–ª–∞—Ç–∏–≤—à–µ–≥–æ –ø–æ–¥–ø–∏—Å–∫—É.  –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.

<b>–ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?</b>
–î–ª—è –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º: @managerpingvin_ai""",
        parse_mode="HTML"
    )
    
    
@info_router.message(F.text == "–ê–∫–∫–∞—É–Ω—Ç")
async def account_handler(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
        callback_data="drop"
    )
    await message.answer(
        text="–ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã",
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    
    
@info_router.callback_query(F.data == "drop")
async def drop_callback(call: types.CallbackQuery):
    await call.message.delete()
    await call.message.answer(
        text="–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞!",
        reply_markup=types.ReplyKeyboardRemove(),
        parse_mode="HTML"
    )
    

def setup(dp):
    dp.include_router(info_router)    

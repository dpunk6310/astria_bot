import asyncio
from pathlib import Path

from aiogram import types, Router, F
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder

from data.messages import use_messages
from core.backend.api import (
    create_user_db, 
    get_user,
)
from .utils import (
    create_referal,
    get_main_keyboard,
)


info_router = Router()
BASE_DIR = Path(__file__).resolve().parent.parent


@info_router.message(CommandStart())
@use_messages
async def start_handler(message: types.Message, messages):
    user_db = await get_user(str(message.chat.id))
    if not user_db:
        user_db = await create_user_db(
            tg_user_id=message.from_user.id,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name,
            username=message.from_user.username
        )
                
    builder = InlineKeyboardBuilder()
    
    builder.add(
        types.InlineKeyboardButton(
            text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
            callback_data="inst"
        ),
        types.InlineKeyboardButton(
            text="–û–ø–ª–∞—Ç–∏—Ç—å",
            callback_data="first_payment"
        ),
    )
    
    keyboard = builder.as_markup()
    if user_db.get("count_generations") > 3:
        keyboard = get_main_keyboard()
    
    asyncio.create_task(create_referal(user_db, message))
    
    await message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "logo_p.png"),
        caption="""<b>–ü—Ä–∏–≤–µ—Ç! –ù–∞ —Å–≤—è–∑–∏ –ü–∏–Ω–≥–≤–∏–Ω –±–æ—Ç - —É—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø–æ–ø—É–ª—è—Ä–Ω–æ–π –Ω–µ–π—Ä–æ–Ω–∫–∏</b> üêß

–†–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –∫–∞–∫ –∑–¥–µ—Å—å –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç? –ê –µ—Å–ª–∏ —Ç—ã —É–∂–µ –≤ –∫—É—Ä—Å–µ, –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤–Ω–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É - –∏ –≤–ø–µ—Ä–µ–¥!
""",
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    

@info_router.callback_query(F.data == "inst")
async def inst_callback(call: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(
        types.InlineKeyboardButton(
            text="–í—Å–µ –ø–æ–Ω—è—Ç–Ω–æ!",
            callback_data="inst_next2"
        ),
    )
    await call.message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "90.png"),
        caption="""<b>–ü–∏–Ω–≥–≤–∏–Ω –ò–ò</b> - —ç—Ç–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—å, –∫–æ—Ç–æ—Ä–∞—è —É—á–∏—Ç—Å—è –Ω–∞ —Ç–≤–æ–∏—Ö —Ñ–æ—Ç–æ –∏ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–µ <b>—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –≤–∏–¥–µ–æ</b> —Å —Ç–≤–æ–∏–º–∏ —á–µ—Ä—Ç–∞–º–∏ –ª–∏—Ü–∞ 

<b>–ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</b> üòç""",
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    
    
@info_router.callback_query(F.data == "inst_next2")
async def inst_next2_callback(call: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(
        types.InlineKeyboardButton(
            text="–î–∞–ª—å—à–µ!",
            callback_data="inst_next3"
        ),
    )
    await call.message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "2.png"),
        caption="–ü–æ–¥–æ–π–¥—É—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ª—é–±–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞, –Ω–æ —Å—Ç—É–¥–∏–π–Ω—ã–µ –º–æ–≥—É—Ç –¥–∞—Ç—å –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!",
        reply_markup=builder.as_markup()
    )
    

@info_router.callback_query(F.data == "inst_next3")
async def inst_next3_callback(call: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(
        types.InlineKeyboardButton(
            text="–ê —Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?",
            callback_data="inst_next4"
        ),
    )
    await call.message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "87.jpg"),
        caption="""<b>–î–ª—è —Ç–µ–±—è –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–≤–∞ —Ä–µ–∂–∏–º–∞ –Ω–∞ –≤—ã–±–æ—Ä:</b>

1. –†–µ–∂–∏–º ¬´–°—Ç–∏–ª–∏¬ª, –≥–¥–µ —Ç—ã –≤—ã–±–∏—Ä–∞–µ—à—å –∫–µ–º –±—ã—Ç—å: –æ—Ç —Ä–µ–±–µ–Ω–∫–∞ –¥–æ –∫–∏–Ω–æ–∑–≤–µ–∑–¥—ã! 
2. ¬´–†–µ–∂–∏–º –±–æ–≥–∞¬ª, –≥–¥–µ —Ç—ã —Å–∞–º —Ä–µ—à–∞–µ—à—å –∫–µ–º –±—ã—Ç—å! –¢–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—Å–∞—Ç—å —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤–∞—Ö)

–ó–∞—Ç–µ–º –æ–∂–∏–≤–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ <b>—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –∏—Ö –≤ –≤–∏–¥–µ–æ</b> –ø–æ —Å–≤–æ–µ–º—É –∂–µ–ª–∞–Ω–∏—é! ü§©""",
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    
    
@info_router.callback_query(F.data == "inst_next4")
async def inst_next4_callback(call: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(
        types.InlineKeyboardButton(
            text="–ö—É–ø–∏—Ç—å!",
            callback_data="first_payment"
        ),
    )
    await call.message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "89.png"),
        caption="""<b>–¢—ã –≥–æ—Ç–æ–≤(–∞) —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–∏ –Ω–æ–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏? –¢–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –≤–Ω–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É –∏ –Ω–∞—á–Ω—ë–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —à–µ–¥–µ–≤—Ä–æ–≤!</b>

–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç–µ–±–µ –ø–æ–≤–µ–∑–ª–æ, —Å–µ–π—á–∞—Å –º—ã —Å–Ω–∏–∑–∏–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞ 72%: 1 290‚ÇΩ –≤–º–µ—Å—Ç–æ <s>4 490‚ÇΩ</s>

–û–ø–ª–∞—Ç–∏ —Å–µ–π—á–∞—Å –∫–∞—Ä—Ç–æ–π –†–§, –ª–∏–±–æ –∑–∞—Ä—É–±–µ–∂–Ω–æ–π –∫–∞—Ä—Ç–æ–π –∏ –ø–æ–ª—É—á–∏:
‚úîÔ∏è 90 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π 
‚úîÔ∏è –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–±–ª–æ–Ω–æ–≤
‚úîÔ∏è 1 –º–æ–¥–µ–ª—å
‚úîÔ∏è –†–µ–∂–∏–º –±–æ–≥–∞
‚úîÔ∏è <b>–û–∂–∏–≤–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ!</b>

üéÅ <b>–ï—Å–ª–∏ —É—Å–ø–µ–µ—à—å –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ 30 –º–∏–Ω—É—Ç, –ø–æ–ª—É—á–∏—à—å –µ—â—ë 10 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ –ø–æ–¥–∞—Ä–æ–∫</b>""",
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    
    
@info_router.callback_query(F.data == "home")
async def home_callback(call: types.CallbackQuery):
    user_db = await get_user(str(call.message.chat.id))
    if not user_db:
        user_db = await create_user_db(
            tg_user_id=call.message.from_user.id,
            first_name=call.message.from_user.first_name,
            last_name=call.message.from_user.last_name,
            username=call.message.from_user.username
        )
        
        
    builder = InlineKeyboardBuilder()
    
    builder.add(
        types.InlineKeyboardButton(
            text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
            callback_data="inst"
        ),
        types.InlineKeyboardButton(
            text="–û–ø–ª–∞—Ç–∏—Ç—å",
            callback_data="first_payment"
        ),
    )
    
    keyboard = builder.as_markup()
    if user_db.get("count_generations") > 3:
        keyboard = get_main_keyboard()
    
    await call.message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "logo_p.png"),
        caption="""<b>–ü—Ä–∏–≤–µ—Ç! –ù–∞ —Å–≤—è–∑–∏ –ü–∏–Ω–≥–≤–∏–Ω –±–æ—Ç - —É—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø–æ–ø—É–ª—è—Ä–Ω–æ–π –Ω–µ–π—Ä–æ–Ω–∫–∏</b> üêß

–†–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –∫–∞–∫ –∑–¥–µ—Å—å –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç? –ê –µ—Å–ª–∏ —Ç—ã —É–∂–µ –≤ –∫—É—Ä—Å–µ, –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤–Ω–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É - –∏ –≤–ø–µ—Ä–µ–¥!
""",
        reply_markup=keyboard,
        parse_mode="HTML"
    )


@info_router.callback_query(F.data == "driving")
async def driving_callback(call: types.CallbackQuery):
    await call.message.answer_photo(
        photo=types.FSInputFile(BASE_DIR / "media" / "87.jpg"),
        caption="""<b>–î–ª—è —Ç–µ–±—è –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–≤–∞ —Ä–µ–∂–∏–º–∞ –Ω–∞ –≤—ã–±–æ—Ä:</b>

1. –†–µ–∂–∏–º ¬´–°—Ç–∏–ª–∏¬ª, –≥–¥–µ —Ç—ã –≤—ã–±–∏—Ä–∞–µ—à—å –∫–µ–º –±—ã—Ç—å: –æ—Ç —Ä–µ–±–µ–Ω–∫–∞ –¥–æ –∫–∏–Ω–æ–∑–≤–µ–∑–¥—ã! 
2. ¬´–†–µ–∂–∏–º –±–æ–≥–∞¬ª, –≥–¥–µ —Ç—ã —Å–∞–º —Ä–µ—à–∞–µ—à—å –∫–µ–º –±—ã—Ç—å! –¢–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—Å–∞—Ç—å —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤–∞—Ö)

–ó–∞—Ç–µ–º –æ–∂–∏–≤–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ <b>—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –∏—Ö –≤ –≤–∏–¥–µ–æ –ø–æ —Å–≤–æ–µ–º—É –∂–µ–ª–∞–Ω–∏—é!</b> ü§©""",
        reply_markup=get_main_keyboard(),
        parse_mode="HTML"
    )
    

def setup(dp):
    dp.include_router(info_router)    

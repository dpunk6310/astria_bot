import asyncio
from pathlib import Path

from aiogram import types, Router, F
from aiogram.utils.keyboard import InlineKeyboardBuilder

from core.backend.api import (
    get_user,
    update_user,
)

from .utils import (
    generate_video_from_photo_task
)


gen_video_router = Router()

BASE_DIR = Path(__file__).resolve().parent.parent


@gen_video_router.message(F.text == "–û–∂–∏–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ")
async def bring_photo_to_life(message: types.Message):
    user_db = await get_user(message.chat.id)
    await message.answer(
        text="""
<b>–°–ø–∞—Å–∏–±–æ —á—Ç–æ —Ç—ã —Å –Ω–∞–º–∏, —Ç—ã —Ç–∞–∫–æ–π —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã–π! –ê —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã–º –ª—é–¥—è–º –Ω–∞–¥–æ –¥–µ—Ä–∂–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ</b> üññü§ù‚ù§Ô∏è

–ó–∞–≥—Ä—É–∑–∏ 1 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ —Ö–æ—Ä–æ—à–µ–º –∫–∞—á–µ—Å—Ç–≤–µ.

–£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å –æ–∂–∏–≤–ª–µ–Ω–∏–π —Ñ–æ—Ç–æ: <b>{count_gen}</b>
""".format(count_gen=user_db.get("count_video_generations")),
        parse_mode="HTML"
    )
    
    
@gen_video_router.message(F.photo)
async def handle_photo_upload(message: types.Message):
    user_db = await get_user(message.chat.id)
    
    if user_db.get("count_video_generations", 0) <= 0:
        await message.answer("–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ. üò¢")
        return
    
    photo = message.photo[-1]
    file_id = photo.file_id
    
    file = await message.bot.get_file(file_id)
    file_path = file.file_path
    photo_url = f"https://api.telegram.org/file/bot{message.bot.token}/{file_path}"
    
    await message.answer("–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ! –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É... üõ†Ô∏è")
    
    asyncio.create_task(generate_video_from_photo_task(message, photo_url, user_db))



def setup(dp):
    dp.include_router(gen_video_router)

import asyncio
from pathlib import Path

from aiogram import types, Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder

from data.messages import use_messages
from core.backend.api import (
    create_user_db, 
    get_user,
    update_user,
)
from core.logger.logger import get_logger
from .utils import (
    create_referal,
    get_main_keyboard,
    get_prices_photo
)


faq_router = Router()
BASE_DIR = Path(__file__).resolve().parent.parent
log = get_logger()


async def get_faq(message: types.Message):
    builder = InlineKeyboardBuilder()
    # builder.button(
    #     text="–î–ª—è —á–µ–≥–æ –Ω—É–∂–µ–Ω –ü–∏–Ω–≥–≤–∏–Ω –ò–ò?",
    #     callback_data="faq_1"
    # )
    # builder.button(
    #     text="–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è?",
    #     callback_data="faq_2"
    # )
    builder.button(
        text="–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã",
        callback_data="faq_3"
    )
    builder.button(
        text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π",
        callback_data="faq_subscribe"
    )
    builder.button(
        text="–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
        callback_data="faq_support"
    )
    builder.adjust(1, 1, 1, 1)
    await message.answer("""<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –º–µ–Ω—é</b>

–ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤—Å—è –Ω—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ü–∏–Ω–≥–≤–∏–Ω –ò–ò

–ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã - –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É""", 
    parse_mode="HTML", reply_markup=builder.as_markup())


@faq_router.message(F.text == "FAQ")
async def faq_handler(message: types.Message, state: FSMContext):
    await state.clear()
    await get_faq(message=message)
    
    
@faq_router.callback_query(F.data == "faq_back")
async def faq_back_callback(call: types.CallbackQuery, state: FSMContext):
    await state.clear()
    await call.message.delete()
    await get_faq(message=call.message)
    
    
    
@faq_router.callback_query(F.data == "faq_support")
async def faq_support_callback(call: types.CallbackQuery, state: FSMContext):
    await state.clear()
    await call.message.delete()
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–ù–∞–∑–∞–¥",
        callback_data="faq_back"
    )
    await call.message.answer(
    """<b>–ù–∞—à–∞ —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —ç—Ç–æ–º –¢–µ–ª–µ–≥—Ä–∞–º –∞–∫–∫–∞—É–Ω—Ç–µ:</b> @managerpingvin_ai

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–µ—Ç–∞–ª—å–Ω–æ –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ —É –≤–∞—Å –ø—Ä–æ–∏–∑–æ—à–ª–æ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã - —Ç–∞–∫ –º—ã —Å–º–æ–∂–µ–º –ø–æ–º–æ—á—å —Ç–µ–±–µ –±—ã—Å—Ç—Ä–µ–µ. –ù–µ –∑–∞–±—É–¥—å —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π Chat ID: <code>{chat_id}</code>""".format(chat_id=call.message.chat.id),
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    
    
@faq_router.callback_query(F.data == "faq_3")
async def faq_3_callback(call: types.CallbackQuery, state: FSMContext):
    await state.clear()
    await call.message.delete()
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–ù–∞–∑–∞–¥",
        callback_data="faq_back"
    )
    await call.message.answer(
        text="""<b>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:</b>

<b>–û—Å—Ç–∞—é—Ç—Å—è –ª–∏ –º–æ–∏ —Ñ–æ—Ç–æ –∏ –∞–≤–∞—Ç–∞—Ä –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏?</b>
–ê–±—Å–æ–ª—é—Ç–Ω–æ! –í–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –Ω–∞ –∏—Ö –æ—Å–Ω–æ–≤–µ –º–æ–¥–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤–∞–º–∏ –∏ —Ö—Ä–∞–Ω—è—Ç—Å—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–µ–ø–µ–Ω—å—é –∑–∞—â–∏—Ç—ã.

<b>–ö–∞–∫ –±—ã—Å—Ç—Ä–æ —Å–æ–∑–¥–∞—é—Ç—Å—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?</b>
–ü–æ–ª—É—á–∞–π—Ç–µ 3 –≥–æ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ–≥–æ –∑–∞ 40-50 —Å–µ–∫—É–Ω–¥!

<b>–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã?</b>
–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞—Ä—Ç—ã –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω –º–∏—Ä–∞ —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ, –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã, –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–∫–æ–Ω–∞–º.

<b>–ï—Å—Ç—å –ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥?</b>
–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç.  –í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞—à–µ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —Ç—Ä–µ–±—É–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –º–æ—â–Ω–æ—Å—Ç–µ–π, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã–º.

<b>–ù–∞—Å–∫–æ–ª—å–∫–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã –ø–æ–ª—É—á–∞–µ–º—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è?</b>
–°–æ–∑–¥–∞–Ω–Ω—ã–µ –ò–ò —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã.  –ú–Ω–æ–≥–∏–µ –∫–ª–∏–µ–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∏—Ö –¥–∞–∂–µ –≤ —Å–≤–æ–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—é–º–µ!

<b>–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã?</b>
–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É, –≥–¥–µ —Å–º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ñ–æ—Ç–æ, —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–æ–π.

<b>–°–∫–æ–ª—å–∫–æ —Å—Ç–∏–ª–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ?</b>
–°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω–æ –±–æ–ª–µ–µ 100 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π! –í—ã —Å–º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–µ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞.

<b>–ï—Å—Ç—å –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞?</b>
–ö–æ–Ω–µ—á–Ω–æ! –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ: 30 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –æ–ø–ª–∞—Ç–∏–≤—à–µ–≥–æ –ø–æ–¥–ø–∏—Å–∫—É.  –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.

<b>–ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?</b>
–î–ª—è –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞–∑–¥–µ–ª ¬´–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π¬ª
""",
        parse_mode="HTML",
        reply_markup=builder.as_markup()
    )


@faq_router.callback_query(F.data == "faq_subscribe")
async def faq_subscribe_callback(call: types.CallbackQuery):
    await call.message.delete()
    
    status = "üü¢ –û—Ñ–æ—Ä–º–ª–µ–Ω–∞"
    user_db = await get_user(str(call.message.chat.id))
    if not user_db.get("subscribe") and not user_db.get("maternity_payment_id"):
        status = "üî¥ –ù–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞"
    
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–ü–æ–¥–¥–µ—Ä–∂–∫–∞",
        callback_data="faq_support"
    )
    builder.button(
        text="–û—Ç–º–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏",
        callback_data="drop_subscribe_1"
    )
    builder.button(
        text="–ù–∞–∑–∞–¥",
        callback_data="faq_back"
    )
    
    
    builder.adjust(1, 1, 1)
    await call.message.answer(
        text="""<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ –≤–∞—à–µ–º –ª–∏—á–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π!</b>

–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ü–∏–Ω–≥–≤–∏–Ω –ò–ò ‚Äì —ç—Ç–æ –≤–∞—à –∫–ª—é—á –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø–æ—Ç—Ä—è—Å–∞—é—â–∏—Ö —Ñ–æ—Ç–æ, —É–ª—É—á—à–µ–Ω–∏—é –∏—Ö –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –≤–æ–ø–ª–æ—â–µ–Ω–∏—é –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –∏–¥–µ–π! üì∏

–ó–∞–±—É–¥—å—Ç–µ –æ –¥–æ—Ä–æ–≥–æ—Å—Ç–æ—è—â–∏—Ö —É—Å–ª—É–≥–∞—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤ –∏ –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤ ‚Äì —ç–∫–æ–Ω–æ–º—å—Ç–µ —Å —É–º–æ–º!

–•–æ—Ç–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å? –°—Ç–∞–Ω—å—Ç–µ –Ω–µ–π—Ä–æ-—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–º —Å –ü–∏–Ω–≥–≤–∏–Ω –ò–ò!

–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: <b>{status}</b>""".format(status=status),
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )



@faq_router.callback_query(F.data == "drop_subscribe_1")
async def drop_subscribe_1_callback(call: types.CallbackQuery):
    await call.message.delete()
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
        callback_data="drop_subscribe_2"
    )
    builder.button(
        text="–ü–æ–¥–¥–µ—Ä–∂–∫–∞",
        callback_data="faq_support"
    )
    builder.button(
        text="–ù–∞–∑–∞–¥",
        callback_data="faq_back"
    )
    builder.adjust(1, 1, 1)
    await call.message.answer(
        text='''{first_name}, –≤—ã —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞—á–µ—Å—Ç–≤–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –Ω–∞—à –æ—Ç–¥–µ–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ‚Äî –º—ã –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –ø–æ–º–æ–∂–µ–º –∏ —Ä–µ—à–∏–º –≤–æ–ø—Ä–æ—Å.

–ù–∞–∂–º–∏—Ç–µ: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞".'''.format(first_name=call.message.chat.first_name),
        parse_mode="HTML",
        reply_markup=builder.as_markup()
    )


@faq_router.callback_query(F.data == "drop_subscribe_2")
async def drop_subscribe_2_callback(call: types.CallbackQuery):
    await call.message.delete()
    # user_db = await get_user(str(call.message.chat.id))
    # if not user_db.get("maternity_payment_id"):
    asyncio.create_task(
        update_user(data={
            "tg_user_id": str(call.message.chat.id),
            "maternity_payment_id": None,
            "subscribe": None
        })
    )
    await call.message.answer(
        text="""{first_name}, –≤–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞

–ù–∞–º –æ—á–µ–Ω—å –∂–∞–ª—å —Å –≤–∞–º–∏ —Ä–∞—Å—Å—Ç–∞–≤–∞—Ç—å—Å—è, –ø–æ—ç—Ç–æ–º—É –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–π. üòî""".format(first_name=call.message.chat.first_name),
        parse_mode="HTML"
    )
    await get_prices_photo(call=call)


def setup(dp):
    dp.include_router(faq_router)    

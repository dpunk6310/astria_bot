version: '3.8'

services:

  backend: &backend
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend
    ports:
      - "8080:8080"
    env_file:
      - .env
    restart: always
    volumes:
      - ./static:/app/static
      - ./media:/app/media
    command: sh /app/entrypoint.sh
    logging:
      options:
        max-size: "100m"
        max-file: "100"

  nginx:
    build:
      dockerfile: ./nginx-app/Dockerfile.stage
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./static:/app/static
      - ./media:/app/media
    depends_on:
      - backend
    logging:
      options:
        max-size: "100m"
        max-file: "100"

  celery_worker:
    <<: *backend
    container_name: celery_worker
    command: celery -A config.celery worker --loglevel=info
    depends_on:
      - backend
    ports: []
    logging:
      options:
        max-size: "100m"
        max-file: "100"

  celery_beat:
    <<: *backend
    container_name: celery_beat
    command: celery -A config.celery beat --loglevel=info
    depends_on:
      - backend
    ports: []
    logging:
      options:
        max-size: "100m"
        max-file: "100"


  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: bot
    depends_on:
      - backend
    env_file:
      - .env
    restart: always
    volumes:
      - ./media:/app/media
    logging:
      options:
        max-size: "100m"
        max-file: "100"

  stat:
    build:
      context: .
      dockerfile: Dockerfile.stat
    container_name: stat
    command: ["go", "run", "cmd/main/main.go"]
    env_file:
      - .env
    restart: always
